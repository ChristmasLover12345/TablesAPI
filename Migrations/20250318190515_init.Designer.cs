// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TablesAPI.Context;

#nullable disable

namespace TablesAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250318190515_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TablesAPI.Models.CommentsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GalleryPostModelId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("RoutesModelId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GalleryPostModelId");

                    b.HasIndex("RoutesModelId");

                    b.ToTable("CommentsModel");
                });

            modelBuilder.Entity("TablesAPI.Models.Coordinates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int?>("RoutesModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoutesModelId");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("TablesAPI.Models.GalleryPostModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GalleryPosts");
                });

            modelBuilder.Entity("TablesAPI.Models.LikesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentsModelId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GalleryPostModelId")
                        .HasColumnType("int");

                    b.Property<string>("PostId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoutesModelId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentsModelId");

                    b.HasIndex("GalleryPostModelId");

                    b.HasIndex("RoutesModelId");

                    b.ToTable("LikesModel");
                });

            modelBuilder.Entity("TablesAPI.Models.RoutesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("RouteDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("TablesAPI.Models.UserProfileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BikeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RideConsistency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RidingExperience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RidingPreference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("TablesAPI.Models.CommentsModel", b =>
                {
                    b.HasOne("TablesAPI.Models.GalleryPostModel", null)
                        .WithMany("Comments")
                        .HasForeignKey("GalleryPostModelId");

                    b.HasOne("TablesAPI.Models.RoutesModel", null)
                        .WithMany("Comments")
                        .HasForeignKey("RoutesModelId");
                });

            modelBuilder.Entity("TablesAPI.Models.Coordinates", b =>
                {
                    b.HasOne("TablesAPI.Models.RoutesModel", null)
                        .WithMany("RouteData")
                        .HasForeignKey("RoutesModelId");
                });

            modelBuilder.Entity("TablesAPI.Models.LikesModel", b =>
                {
                    b.HasOne("TablesAPI.Models.CommentsModel", null)
                        .WithMany("Likes")
                        .HasForeignKey("CommentsModelId");

                    b.HasOne("TablesAPI.Models.GalleryPostModel", null)
                        .WithMany("Likes")
                        .HasForeignKey("GalleryPostModelId");

                    b.HasOne("TablesAPI.Models.RoutesModel", null)
                        .WithMany("Likes")
                        .HasForeignKey("RoutesModelId");
                });

            modelBuilder.Entity("TablesAPI.Models.CommentsModel", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("TablesAPI.Models.GalleryPostModel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("TablesAPI.Models.RoutesModel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");

                    b.Navigation("RouteData");
                });
#pragma warning restore 612, 618
        }
    }
}
